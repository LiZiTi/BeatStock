import pymysql
import random
from faker import Faker
import jieba
import jieba.posseg as pseg 


faker = Faker("zh_CN")  # 中文环境

# 敏感词列表
SENSITIVE_WORDS = [
    # 政治类敏感词
    "习近平", "毛泽东", "周恩来", "邓小平", "江泽民", "胡锦涛", "李克强", "温家宝", "赵紫阳", "华国锋",
    "刘少奇", "朱镕基", "李鹏", "陈云", "林彪", "彭德怀", "贺龙", "陈毅", "罗荣桓", "徐向前",
    "聂荣臻", "叶剑英", "李先念", "杨尚昆", "王震", "薄一波", "邓颖超", "宋庆龄", "张闻天", "高岗",
    "康生", "江青", "张春桥", "姚文元", "王洪文", "陈伯达", "胡耀邦", "万里", "习仲勋", "李瑞环",
    "尉健行", "宋平", "乔石", "李岚清", "吴邦国", "曾庆红", "贾庆林", "黄菊", "吴官正", "李长春",
    "罗干", "周永康", "张德江", "俞正声", "刘云山", "王岐山", "张高丽", "韩正", "蔡奇", "陈全国",
    # 负面情绪类词汇
    "垃圾", "失败", "无用", "讨厌", "愤怒", "坏", "毁灭", "糟糕", "崩溃", "绝望", "傻", "笨",
    "愚蠢", "无知", "懒惰", "恶心", "低级", "下流", "恐怖", "愤恨", "恶毒", "肮脏", "侮辱",
    "欺骗", "危险", "暴力", "破坏", "犯罪", "羞辱", "无耻", "残忍", "恶化", "衰败", "贪婪",
    "懦弱", "歧视", "孤立", "腐败", "恶霸", "罪恶", "恐惧", "流氓", "混乱", "野蛮", "争斗",
    # 性别歧视类词汇
    "男人", "女人", "性别", "性骚扰", "性暴力", "女性主义", "厌女", "厌男", "女权", "大男子主义",
    "不男不女", "母猪", "娘炮", "直男癌", "绿茶", "屌丝", "小三", "红杏出墙",
    # 敏感话题
    "疆独", "藏独", "台独", "民主", "集权", "暴政", "独裁", "游行", "示威", "罢工", "革命",
    "起义", "镇压", "暴乱", "言论自由", "新闻管制", "互联网审查", "敏感词", "封锁", "暗杀",
    # 其他高风险词汇
    "毒品", "枪支", "杀人", "诈骗", "洗钱", "恐怖主义", "恐怖分子", "人体器官", "贩卖人口",
    "腐败分子", "违法", "监禁", "恐吓", "虐待", "绑架", "勒索", "邪教", "迷信", "巫术",
    "黑社会", "地下组织", "间谍", "叛国", "泄密", "核武器", "生化武器", "战争", "种族主义",
    "排外", "仇恨", "暴动", "叛乱", "分裂主义", "恐慌", "暴徒", "暴行", "失控",
    # 更多词汇（根据需求继续补充）
]

SENSITIVE_WORDS.extend([
    # 美国相关
    "美国", "美利坚", "白宫", "五角大楼", "CIA", "FBI", "国会山", "华盛顿", "美军", "美航母", "美方",
    "北约", "太平洋司令部", "美中贸易战", "人权报告", "冷战", "美联储", "华尔街", "好莱坞",
    
    # 日本相关
    "日本", "日本政府", "东京", "天皇", "自卫队", "靖国神社", "钓鱼岛", "军国主义", "二战", "日美同盟",
    "和服", "樱花经济", "日军", "东海争端", "日本右翼", "安倍", "岸田文雄", "福岛核污染",
    
    # 印度相关
    "印度", "新德里", "莫迪", "印军", "中印边境", "加勒万河谷", "阿鲁纳恰尔邦", "印度教", "恒河",
    "印度裔", "印度太空", "印度国产武器", "中印对峙",
    
    # 越南相关
    "越南", "河内", "中越战争", "越南海军", "南海争端", "岘港", "越方", "越南偷渡", "中越边界",
    
    # 菲律宾相关
    "菲律宾", "马尼拉", "南海仲裁", "菲律宾总统", "菲律宾海岸警卫队", "菲律宾渔民", "美菲联合军演",
    "苏比克湾", "菲律宾南海争端",
    
    # 英国相关
    "英国", "伦敦", "首相府", "工党", "保守党", "脱欧", "英联邦", "BBC", "香港事务", "苏格兰独立",
    "温莎家族", "英镑危机",
    
    # 澳大利亚相关
    "澳大利亚", "堪培拉", "澳军", "澳中贸易争端", "澳大利亚矿业", "澳洲煤炭", "澳大利亚葡萄酒",
    "澳媒", "澳大利亚议会", "澳太战略",
    
    # 加拿大相关
    "加拿大", "渥太华", "加拿大鹅", "孟晚舟事件", "加拿大议会", "加中关系", "加拿大总理",
    "温哥华", "多伦多", "加拿大护照", "加拿大海关",
    
    # 台湾相关
    "台湾", "台独", "蔡英文", "民进党", "两岸关系", "台湾问题", "台海", "台湾军方", "台积电",
    "台商", "台湾选举", "台湾护照", "台湾省", "宝岛", "台湾海峡",
    
    # 韩国相关
    "韩国", "首尔", "韩军", "韩国瑜", "韩国娱乐", "韩流", "中韩贸易", "韩国总统", "韩美联合军演",
    "韩国外交部", "韩国网红"
])


RULE_MAPPING = {
    "总收入": lambda: round(random.uniform(10000, 1000000), 2),  # 随机金额
    "资质": lambda: random.choice(["一级资质", "二级资质", "三级资质"]),
    "母亲": lambda: faker.name_female(),  # 女性姓名
    "实名制": lambda: random.choice(["已实名", "未实名"]),
    "核定": lambda: random.choice(["核定通过", "核定未通过"]),
    "责任区": lambda: f"责任区-{random.randint(1, 50)}",
    "区": lambda: faker.district(),
    "渣土": lambda: f"{random.randint(1, 100)} 吨",
    "社会": lambda: random.choice(["社会服务", "社会组织"]),
    "时段": lambda: f"{random.randint(0, 23)}:00-{random.randint(0, 23)}:59",
    "办证": lambda: faker.word() + "证",
    "供货": lambda: faker.company(),
    "行车": lambda: random.choice(["顺畅", "拥堵", "封闭"]),
    "建筑面积": lambda: f"{random.uniform(50, 1000):.2f} 平方米",
    "落款": lambda: faker.company_suffix(),
    "拼音": lambda: faker.first_name() + faker.last_name(),
    "种类": lambda: random.choice(["A类", "B类", "C类"]),
    "外文": lambda: faker.sentence(nb_words=20),
    "额": lambda: round(random.uniform(1000, 100000), 2),
    "排量": lambda: f"{random.uniform(1.0, 5.0):.1f} L",
    "名义": lambda: random.choice(["法人代表", "个人投资者"]),
    "形式": lambda: random.choice(["线上", "线下"]),
    "考试成绩": lambda: random.randint(0, 100),
    "居民": lambda: faker.name(),
    "规范": lambda: faker.word() + "规范",
    "一策": lambda: faker.sentence(nb_words=5),
    "接生员": lambda: faker.name_female(),
    "交款": lambda: f"{random.randint(100, 5000)} 元",
    "编": lambda: f"编-{random.randint(1000, 9999)}",
    "婚姻状况": lambda: random.choice(["已婚", "未婚", "离异"]),
    "办理": lambda: random.choice(["成功", "失败"]),
    "占地面积": lambda: f"{random.uniform(10, 500):.2f} 亩",
    "房屋": lambda: random.choice(["独栋别墅", "公寓", "联排住宅"]),
    "申报": lambda: faker.word() + "申报",
    "驾驶证": lambda: faker.license_plate(),
    "出水口": lambda: f"出水口-{random.randint(1, 20)}",
    "盖章": lambda: random.choice(["已盖章", "未盖章"]),
    "登记证": lambda: faker.word() + "登记证",
    "室号": lambda: f"{random.randint(101, 999)}",
    "专长": lambda: random.choice(["软件开发", "财务管理", "市场营销"]),
    "车号牌": lambda: faker.license_plate(),
    "许可证": lambda: faker.word() + "许可证",
    "专案": lambda: f"专案-{random.randint(1, 100)}",
    "地": lambda: faker.city(),
    "旗": lambda: random.choice(["红旗", "蓝旗", "黄旗"]),
    "警告": lambda: random.choice(["一级警告", "二级警告"]),
    "前值": lambda: round(random.uniform(100, 10000), 2),
    "额折": lambda: f"{round(random.uniform(0.1, 1.0), 2)} 折",
    "资质等级": lambda: random.choice(["一级", "二级", "三级"]),
    "理由": lambda: faker.sentence(nb_words=8),
    "类型": lambda: random.choice(["类型A", "类型B", "类型C"]),
    "河道": lambda: f"河道-{random.randint(1, 100)}",
    "申请人": lambda: faker.name(),
    "成员": lambda: [faker.name() for _ in range(random.randint(1, 5))],
    "弹簧片": lambda: f"{random.randint(1, 10)} 片",
    "协管": lambda: random.choice(["协管员A", "协管员B"]),
    "家庭": lambda: [faker.name() for _ in range(random.randint(2, 6))],
    "直径": lambda: f"{random.uniform(0.1, 2.0):.2f} 米",
    "银行": lambda: faker.bank(),
    "空间信息": lambda: f"{random.uniform(1000, 9999):.2f} GB",
    "金额": lambda: round(random.uniform(100, 10000), 2),
    "面积": lambda: f"{random.uniform(10, 500):.2f} 平方米",
    "口音": lambda: random.choice(["普通话", "粤语", "闽南语"]),
    "码": lambda: faker.md5(),
    "全局": lambda: faker.sentence(nb_words=5),
    "员工": lambda: faker.name(),
    "经营范围": lambda: faker.word() + "经营",
    "能耗": lambda: f"{random.uniform(10, 500):.2f} kWh",
    "中心点": lambda: f"({random.uniform(0, 90):.6f}, {random.uniform(0, 180):.6f})",
    "收件人": lambda: faker.name(),
    "小区": lambda: faker.street_name(),
    "预案": lambda: faker.sentence(nb_words=8),
    "权属": lambda: random.choice(["个人", "公司"]),
    "落脚点": lambda: faker.address(),
    "职级": lambda: random.choice(["一级", "二级", "三级"]),
    "举报人": lambda: faker.name(),
    "决定书": lambda: faker.word() + "决定书",
    "互联网": lambda: faker.url(),
    "曾用名": lambda: faker.name(),
    "委托书": lambda: faker.word() + "委托书",
    "核审": lambda: random.choice(["通过", "不通过"]),
    "申请书": lambda: faker.word() + "申请书",
    "核准": lambda: random.choice(["核准通过", "核准未通过"]),
    "侨属": lambda: random.choice(["侨属A", "侨属B"]),
    "浓度": lambda: f"{random.uniform(0.1, 100):.2f} %",
    "交通": lambda: random.choice(["交通通畅", "交通拥堵"]),
    "交易市场": lambda: faker.company(),
    "局": lambda: faker.word() + "局",
    "本局": lambda: faker.word() + "本局",
    "原由": lambda: faker.sentence(nb_words=8),
    "重瓶": lambda: f"{random.randint(1, 50)} 瓶",
    "目的": lambda: faker.sentence(nb_words=6),
    "危险源": lambda: random.choice(["化学品", "易燃品", "有毒气体"]),
    "总体": lambda: faker.word() + "总体",
    "照片": lambda: faker.image_url(),
    "街道": lambda: faker.street_name(),
    "个人": lambda: faker.name(),
    "范围": lambda: faker.word() + "范围",
    "具体内容": lambda: faker.sentence(nb_words=50),
    "年报": lambda: f"年度报告-{random.randint(2000, 2024)}",
    "车架号": lambda: faker.ean(length=13),
    "属性": lambda: random.choice(["属性A", "属性B"]),
    "人民检察院": lambda: faker.word() + "人民检察院",
    "帐号": lambda: faker.random_number(digits=10),
    "救助金": lambda: f"{random.uniform(1000, 50000):.2f} 元",
    "滞纳金": lambda: f"{random.uniform(10, 1000):.2f} 元",
    "残疾人": lambda: faker.name(),
    "地名": lambda: faker.city_name(),
    "副本": lambda: faker.word() + "副本",
    "单位地址": lambda: faker.address(),
    "犬": lambda: random.choice(["牧羊犬", "藏獒", "金毛"]),
    "年度": lambda: random.randint(2000, 2024),
    "身份证明": lambda: faker.ssn(),
    "挽回损失": lambda: f"{random.uniform(1000, 100000):.2f} 元",
    "涉嫌犯罪": lambda: random.choice(["盗窃", "诈骗", "非法集资"]),
    "加密": lambda: faker.md5(),
    "阶段": lambda: random.choice(["初期", "中期", "后期"]),
    "领导": lambda: faker.name(),
    "真实性": lambda: random.choice(["真实", "虚假"]),
    "身份证件": lambda: faker.ssn(),
    "来源": lambda: random.choice(["内部", "外部"]),
    "原表": lambda: faker.word() + "表",
    "肇祸": lambda: random.choice(["火灾", "交通事故"]),
    "产权": lambda: random.choice(["个人产权", "公司产权"]),
    "出生日期": lambda: faker.date_of_birth().strftime("%Y-%m-%d"),
    "奇偶": lambda: random.choice(["奇", "偶"]),
    "页码": lambda: random.randint(1, 500),
    "危化品": lambda: random.choice(["易燃液体", "有毒气体", "腐蚀性物品"]),
    "措施": lambda: faker.sentence(nb_words=6),
    "责任": lambda: random.choice(["负责人", "责任单位"]),
    "联系人": lambda: faker.name(),
    "发案地": lambda: faker.city(),
    "材质": lambda: random.choice(["金属", "塑料", "木材"]),
    "申请单": lambda: faker.word() + "申请单",
    "权益": lambda: random.choice(["所有权", "使用权"]),
    "外资": lambda: f"{random.uniform(10000, 1000000):.2f} 元",
    "投资总额": lambda: f"{random.uniform(100000, 10000000):.2f} 元",
    "精神状态": lambda: random.choice(["正常", "异常"]),
    "前置": lambda: faker.sentence(nb_words=5),
    "纬度": lambda: f"{random.uniform(-90, 90):.6f}",
    "地域": lambda: faker.city(),
    "枪支": lambda: random.choice(["手枪", "步枪", "狙击枪"]),
    "元素": lambda: random.choice(["氧", "氢", "氮"]),
    "量": lambda: f"{random.randint(1, 10000)} 单位",
    "证书编号": lambda: f"{random.randint(100000, 999999)}",
    "名称": lambda: faker.word(),
    "制造厂": lambda: faker.company(),
    "燃油": lambda: random.choice(["柴油", "汽油", "天然气"]),
    "单行道": lambda: random.choice(["是", "否"]),
    "毕业生": lambda: faker.name(),
    "时间": lambda: faker.date_time_this_decade().strftime("%Y-%m-%d %H:%M:%S"),
    "能力": lambda: random.choice(["基础", "高级", "专家"]),
    "总值": lambda: f"{random.uniform(1000, 100000):.2f} 元",
    "住院治疗": lambda: random.choice(["是", "否"]),
    "出租房": lambda: faker.address(),
    "初值": lambda: f"{random.uniform(10, 100):.2f}",
    "证明": lambda: faker.word() + "证明",
    "企业": lambda: faker.company(),
    "住房": lambda: random.choice(["公寓", "别墅", "联排住宅"]),
    "储存量": lambda: f"{random.uniform(1, 10000):.2f} 吨",
    "毒品": lambda: random.choice(["海洛因", "大麻", "冰毒"]),
    "逻辑": lambda: faker.word() + "逻辑",
    "管理局": lambda: faker.word() + "管理局",
    "事由": lambda: faker.sentence(nb_words=8),
    "基本": lambda: faker.word() + "基本信息",
    "姓名": lambda: faker.name(),
    "户号": lambda: faker.random_number(digits=10),
    "格式": lambda: random.choice(["PDF", "DOC", "XLS"]),
    "中文": lambda: faker.sentence(nb_words=20),
    "省": lambda: faker.province(),
    "币种": lambda: random.choice(["人民币", "美元", "欧元"]),
    "人口": lambda: random.randint(100, 1000000),
    "公证处": lambda: faker.word() + "公证处",
    "户数": lambda: random.randint(1, 1000),
    "网址": lambda: faker.url(),
    "医技": lambda: random.choice(["影像科", "检验科", "药剂科"]),
    "检数": lambda: random.randint(1, 1000),
    "分支": lambda: random.choice(["分公司", "子公司"]),
    "案源": lambda: faker.sentence(nb_words=5),
    "结案": lambda: random.choice(["已结案", "未结案"]),
    "文件类型": lambda: random.choice(["PDF", "DOC", "XLS", "TXT"]),
    "指标": lambda: random.choice(["达标", "未达标"]),
    "责令": lambda: random.choice(["责令整改", "责令停业"]),
    "笔录": lambda: faker.sentence(nb_words=50),
    "收货": lambda: random.choice(["已收货", "未收货"]),
    "风险": lambda: random.choice(["高风险", "低风险", "中风险"]),
    "英文名称": lambda: faker.word() + "Name",
    "收件": lambda: faker.name(),
    "库": lambda: faker.word() + "库",
    "刑事案件": lambda: random.choice(["盗窃", "抢劫", "故意伤害"]),
    "出租屋": lambda: faker.address(),
    "手段": lambda: faker.sentence(nb_words=6),
    "外键": lambda: f"外键-{random.randint(1000, 9999)}",
    "详址": lambda: faker.address(),
    "型号": lambda: f"型号-{random.randint(1, 1000)}",
    "标志": lambda: random.choice(["合格", "不合格"]),
    "配枪": lambda: random.choice(["手枪", "步枪", "狙击枪"]),
    "特征": lambda: faker.sentence(nb_words=30),
    "巡队": lambda: faker.word() + "巡逻队",
    "字段": lambda: faker.word() + "字段",
    "通知书": lambda: faker.word() + "通知书",
    "总流量": lambda: f"{random.uniform(1, 1000):.2f} m³/s",
    "车架": lambda: faker.ean(length=13),
    "档案": lambda: faker.word() + "档案",
    "手机": lambda: faker.phone_number(),
    "作业区": lambda: random.choice(["区域A", "区域B", "区域C"]),
    "血型": lambda: random.choice(["A", "B", "AB", "O"]),
    "存瓶": lambda: f"{random.randint(1, 100)} 瓶",
    "轮训": lambda: random.choice(["基础轮训", "高级轮训"]),
    "江苏省": lambda: "江苏省",
    "人口数": lambda: random.randint(1000, 1000000),
    "就业人数": lambda: random.randint(100, 10000),
    "评价": lambda: random.choice(["优秀", "良好", "一般"]),
    "现居": lambda: faker.city_name(),
    "普通": lambda: "普通",
    "承运人": lambda: faker.name(),
    "狂犬": lambda: random.choice(["无狂犬症", "疑似狂犬症"]),
    "号牌": lambda: faker.license_plate(),
    "结果": lambda: random.choice(["合格", "不合格"]),
    "智慧": lambda: faker.word() + "智慧",
    "勤务": lambda: random.choice(["正常勤务", "特殊勤务"]),
    "质权": lambda: random.choice(["质押", "抵押"]),
    "情形": lambda: faker.sentence(nb_words=5),
    "经历": lambda: faker.sentence(nb_words=50),
    "代号": lambda: f"代号-{random.randint(1, 999)}",
    "地区": lambda: faker.city(),
    "所有人": lambda: faker.name(),
    "标识": lambda: random.choice(["标识A", "标识B"]),
    "备案号": lambda: f"备案-{random.randint(100000, 999999)}",
    "基础设施": lambda: random.choice(["道路", "桥梁", "供水管道"]),
    "社": lambda: random.choice(["社区A", "社区B"]),
    "企业名单": lambda: [faker.company() for _ in range(random.randint(1, 5))],
    "经办": lambda: faker.name(),
    "门牌号": lambda: f"{random.randint(1, 999)}",
    "经办人": lambda: faker.name(),
    "派出所": lambda: faker.word() + "派出所",
    "现场": lambda: faker.word() + "现场",
    "规定": lambda: faker.sentence(nb_words=6),
    "域名": lambda: faker.domain_name(),
    "排放口": lambda: f"排放口-{random.randint(1, 100)}",
    "市局": lambda: faker.city_name() + "市局",
    "省厅": lambda: faker.province() + "省厅",
    "数据": lambda: faker.word() + "数据",
    "编号": lambda: f"{random.randint(1000, 9999)}-{random.choice(['A', 'B', 'C'])}",
    "计划": lambda: faker.word() + "计划",
    "警戒": lambda: random.choice(["一级警戒", "二级警戒", "解除警戒"]),
    "气": lambda: random.choice(["氧气", "氢气", "二氧化碳"]),
    "目标": lambda: faker.sentence(nb_words=6),
    "机动车": lambda: random.choice(["轿车", "货车", "摩托车"]),
    "年龄": lambda: random.randint(18, 65),
    "职务": lambda: random.choice(["经理", "主管", "员工", "实习生"]),
    "详细情况": lambda: faker.sentence(nb_words=100),
    "申请回避": lambda: random.choice(["是", "否"]),
    "规格型号": lambda: f"规格-{random.randint(100, 999)}",
    "管线": lambda: random.choice(["水管", "燃气管", "电缆管"]),
    "船籍": lambda: random.choice(["中国", "日本", "韩国", "美国"]),
    "整治": lambda: faker.sentence(nb_words=8),
    "车道": lambda: f"{random.randint(1, 4)} 车道",
    "主管部门": lambda: faker.word() + "主管部门",
    "特点": lambda: faker.sentence(nb_words=6),
    "损失": lambda: f"{random.uniform(1000, 100000):.2f} 元",
    "场次": lambda: f"{random.randint(1, 20)} 场",
    "处理意见": lambda: faker.sentence(nb_words=10),
    "关联": lambda: faker.word() + "关联",
    "名录": lambda: faker.word() + "名录",
    "行政": lambda: random.choice(["行政处罚", "行政审批"]),
    "过车": lambda: f"{random.randint(100, 10000)} 辆",
    "养犬": lambda: random.choice(["普通犬", "大型犬"]),
    "承租人": lambda: faker.name(),
    "大": lambda: random.choice(["大件货物", "大项目"]),
    "流量": lambda: f"{random.uniform(10, 1000):.2f} m³/s",
    "治安": lambda: random.choice(["正常", "异常"]),
    "规格": lambda: random.choice(["规格A", "规格B", "规格C"]),
    "城市": lambda: faker.city_name(),
    "听证会": lambda: f"{random.randint(1, 10)} 场听证会",
    "投资人": lambda: faker.name(),
    "上述事实": lambda: faker.sentence(nb_words=12),
    "罚款": lambda: f"{random.uniform(100, 10000):.2f} 元",
    "情况": lambda: faker.sentence(nb_words=10),
    "员": lambda: random.choice(["工作人员", "管理员"]),
    "训练项目": lambda: faker.word() + "训练",
    "对象": lambda: random.choice(["个体", "群体"]),
    "上学": lambda: random.choice(["小学", "初中", "高中", "大学"]),
    "民意": lambda: random.choice(["满意", "不满意"]),
    "执法人员": lambda: faker.name(),
    "警情": lambda: faker.sentence(nb_words=6),
    "首席": lambda: random.choice(["首席工程师", "首席科学家"]),
    "坐标值": lambda: f"({random.uniform(0, 90):.6f}, {random.uniform(0, 180):.6f})",
    "被申请人": lambda: faker.name(),
    "建筑": lambda: faker.word() + "建筑",
    "市场": lambda: faker.word() + "市场",
    "码表": lambda: f"{random.randint(1000, 9999)}",
    "利用网络": lambda: faker.sentence(nb_words=10),
    "采取措施": lambda: faker.sentence(nb_words=8),
    "托管人": lambda: faker.name(),
    "持有人": lambda: faker.name(),
    "政治": lambda: random.choice(["中立", "保守", "自由"]),
    "轮距": lambda: f"{random.uniform(1.0, 3.0):.2f} 米",
    "楼号": lambda: f"{random.randint(1, 50)} 号楼",
    "代表": lambda: faker.name(),
    "燃料": lambda: random.choice(["柴油", "汽油", "天然气"]),
    "商家": lambda: faker.company(),
    "辩论": lambda: f"{random.randint(1, 10)} 场辩论",
    "网店": lambda: faker.company() + "网店",
    "翻译员": lambda: faker.name(),
    "检查人员": lambda: faker.name(),
    "期限": lambda: f"{random.randint(1, 365)} 天",
    "排序": lambda: random.choice(["升序", "降序"]),
    "讲师": lambda: faker.name(),
    "基础": lambda: random.choice(["基础课程", "基础设施"]),
    "失业": lambda: random.choice(["是", "否"]),
    "区间": lambda: f"{random.randint(1, 100)}-{random.randint(101, 200)}",
    "物资": lambda: random.choice(["医疗物资", "生活物资"]),
    "学校名称": lambda: faker.company() + "学校",
    "实体": lambda: faker.word() + "实体",
    "药品": lambda: random.choice(["抗生素", "疫苗", "镇痛剂"]),
    "批量": lambda: f"{random.randint(10, 1000)} 件",
    "装备": lambda: random.choice(["防弹衣", "头盔", "作战靴"]),
    "标记": lambda: faker.word() + "标记",
    "罗列": lambda: faker.sentence(nb_words=10),
    "网络": lambda: faker.url(),
    "案件": lambda: random.choice(["刑事案件", "民事案件", "行政案件"]),
    "住址": lambda: faker.address(),
    "船舶": lambda: random.choice(["货轮", "渔船", "游艇"]),
    "二手车": lambda: random.choice(["小轿车", "卡车"]),
    "点位": lambda: f"点位-{random.randint(1, 100)}",
    "成果": lambda: faker.sentence(nb_words=8),
    "主键": lambda: f"主键-{random.randint(1000, 9999)}",
    "户主": lambda: faker.name(),
    "所属单位": lambda: faker.company(),
    "检验位": lambda: f"{random.randint(1, 100)}号位",
    "地址": lambda: faker.address(),
    "法人代表": lambda: faker.name(),
    "市": lambda: faker.city_name(),
    "经营方式": lambda: random.choice(["线上", "线下"]),
    "密度": lambda: f"{random.uniform(0.1, 10):.2f} g/cm³",
    "持枪": lambda: random.choice(["合法", "非法"]),
    "资产": lambda: f"{random.uniform(10000, 1000000):.2f} 元",
    "压力": lambda: f"{random.uniform(1, 100):.2f} MPa",
    "医院": lambda: faker.company() + "医院",
    "完成率": lambda: f"{random.uniform(0, 100):.2f}%",
    "所有权": lambda: random.choice(["个人所有", "公司所有"]),
    "尺寸": lambda: f"{random.uniform(1, 200):.2f} cm",
    "内涝": lambda: f"{random.uniform(0.1, 1):.2f} 米",
    "次数": lambda: random.randint(1, 100),
    "出质人": lambda: faker.name(),
    "规模": lambda: random.choice(["小型", "中型", "大型"]),
    "品牌": lambda: random.choice(["品牌A", "品牌B", "品牌C"]),
    "申请理由": lambda: faker.sentence(nb_words=12),
    "名单": lambda: [faker.name() for _ in range(random.randint(1, 10))],
    "副号": lambda: f"副号-{random.randint(1, 999)}",
    "户口": lambda: random.choice(["城镇户口", "农村户口"]),
    "摄像机": lambda: f"{random.randint(1, 20)} 台",
    "委办局": lambda: faker.word() + "委办局",
    "门楼": lambda: f"门楼-{random.randint(1, 50)}",
    "警号": lambda: f"警-{random.randint(10000, 99999)}",
    "职位": lambda: random.choice(["经理", "主管", "技术员"]),
    "灌装": lambda: f"{random.uniform(1, 100):.2f} L",
    "用途": lambda: faker.sentence(nb_words=6),
    "X光": lambda: f"{random.randint(1, 50)} 张",
    "车牌号码": lambda: faker.license_plate(),
    "代码": lambda: f"{random.randint(10000, 99999)}",
    "水量": lambda: f"{random.uniform(0.1, 100):.2f} m³",
    "区镇": lambda: faker.city_name() + "镇",
    "时": lambda: faker.date_time_this_year().strftime("%Y-%m-%d %H:%M:%S"),
    "视频": lambda: faker.file_name(extension="mp4"),
    "纳税人": lambda: faker.name(),
    "扫描时间": lambda: faker.date_time_this_year().strftime("%Y-%m-%d %H:%M:%S"),
    "特品": lambda: random.choice(["特殊物品A", "特殊物品B"]),
    "个体": lambda: random.choice(["单人", "家庭"]),
    "历史": lambda: faker.sentence(nb_words=15),
    "市县": lambda: faker.city_name() + "县",
    "成度": lambda: random.choice(["严重", "一般", "轻微"]),
    "警区": lambda: faker.word() + "警区",
    "户籍地": lambda: faker.address(),
    "类别": lambda: random.choice(["类别A", "类别B", "类别C"]),
    "流动人口": lambda: random.randint(100, 10000),
    "净利润": lambda: f"{random.uniform(1000, 100000):.2f} 元",
    "报警": lambda: random.choice(["有效报警", "无效报警"]),
    "供水": lambda: f"{random.uniform(10, 1000):.2f} m³/h",
    "客户": lambda: faker.name(),
    "记": lambda: random.choice(["记账", "记分"]),
    "主管": lambda: faker.name(),
    "状态": lambda: random.choice(["正常", "异常"]),
    "填表人": lambda: faker.name(),
    "籍贯": lambda: faker.province(),
    "主持人": lambda: faker.name(),
    "进水口": lambda: f"进水口-{random.randint(1, 20)}",
    "许可": lambda: random.choice(["许可通过", "未通过"]),
    "股权": lambda: f"{random.uniform(1, 100):.2f}%",
    "民族": lambda: random.choice(["汉族", "壮族", "回族"]),
    "警务": lambda: random.choice(["巡逻", "执法"]),
    "手机号码": lambda: faker.phone_number(),
    "文书": lambda: faker.word() + "文书",
    "门": lambda: random.choice(["前门", "后门"]),
    "实弹射击": lambda: f"{random.randint(1, 100)} 发",
    "见证人": lambda: faker.name(),
    "字号": lambda: faker.word() + "字号",
    "刀具": lambda: random.choice(["剪刀", "切割刀", "多功能刀"]),
    "定位": lambda: f"({random.uniform(0, 90):.6f}, {random.uniform(0, 180):.6f})",
    "材料": lambda: random.choice(["钢铁", "铝合金", "塑料"]),
    "拥有者": lambda: faker.name(),
    "士兵": lambda: faker.name(),
    "页数": lambda: random.randint(1, 500),
    "脸型": lambda: random.choice(["圆脸", "方脸", "长脸"]),
    "电子": lambda: random.choice(["电子设备", "电子文档"]),
    "编码": lambda: f"{random.randint(10000, 99999)}",
    "字": lambda: faker.word(),
    "图像": lambda: faker.image_url(),
    "人民币": lambda: f"{random.uniform(10, 100000):.2f} 元",
    "污泥": lambda: f"{random.uniform(1, 1000):.2f} 吨",
    "人": lambda: faker.name(),
    "史": lambda: faker.sentence(nb_words=10),
    "场站": lambda: random.choice(["火车站", "汽车站", "公交站"]),
    "数量": lambda: random.randint(1, 1000),
    "先验": lambda: faker.sentence(nb_words=8),
    "资助": lambda: f"{random.uniform(1000, 50000):.2f} 元",
    "能源": lambda: random.choice(["太阳能", "风能", "水能"]),
    "图文": lambda: faker.sentence(nb_words=12),
    "流水号": lambda: f"{random.randint(100000, 999999)}",
    "有效证件": lambda: random.choice(["身份证", "驾驶证", "护照"]),
    "量词": lambda: random.choice(["个", "件", "公斤"]),
    "产品": lambda: random.choice(["电子产品", "食品", "服装"]),
    "载客": lambda: random.randint(1, 50),
    "政": lambda: random.choice(["行政管理", "政策研究"]),
    "深度": lambda: f"{random.uniform(1, 500):.2f} 米",
    "文化": lambda: random.choice(["传统文化", "现代文化"]),
    "卡号": lambda: f"{random.randint(1000000000, 9999999999)}",
    "经营性质": lambda: random.choice(["私营", "国营", "外资"]),
    "分词": lambda: faker.word(),
    "当事人": lambda: faker.name(),
    "件数": lambda: random.randint(1, 100),
    "位号": lambda: f"位号-{random.randint(1, 100)}",
    "供应站": lambda: faker.company() + "供应站",
    "液位": lambda: f"{random.uniform(0.1, 10):.2f} m",
    "行业": lambda: random.choice(["IT", "制造业", "服务业"]),
    "主体": lambda: random.choice(["企业主体", "个人主体"]),
    "污水": lambda: f"{random.uniform(1, 1000):.2f} m³",
    "托运人": lambda: faker.name(),
    "英文名": lambda: faker.word() + "Name",
    "技术": lambda: random.choice(["软件技术", "硬件技术"]),
    "职称": lambda: random.choice(["初级", "中级", "高级"]),
    "轴数": lambda: random.randint(1, 6),
    "卡": lambda: random.choice(["银行卡", "会员卡"]),
    "法人": lambda: faker.name(),
    "总负责人": lambda: faker.name(),
    "尾水": lambda: f"{random.uniform(1, 500):.2f} m³",
    "辖区": lambda: faker.city_name() + "辖区",
    "网": lambda: faker.word() + "网",
    "后缀": lambda: random.choice([".com", ".cn", ".org"]),
    "主办单位": lambda: faker.company(),
    "老人": lambda: faker.name(),
    "手机号": lambda: faker.phone_number(),
    "签订合同": lambda: f"合同编号-{random.randint(1000, 9999)}",
    "联系地址": lambda: faker.address(),
    "台数": lambda: random.randint(1, 100),
    "温度": lambda: f"{random.uniform(-30, 50):.2f} ℃",
    "行政处罚": lambda: random.choice(["罚款", "警告", "拘留"]),
    "网格": lambda: f"网格-{random.randint(1, 100)}",
    "入境": lambda: random.choice(["是", "否"]),
    "商品名称": lambda: random.choice(["手机", "电视", "洗衣机"]),
    "用量": lambda: f"{random.uniform(0.1, 1000):.2f} 单位",
    "心理": lambda: random.choice(["健康", "亚健康"]),
    "安保": lambda: random.choice(["保安服务", "监控设备"]),
    "行政区划": lambda: faker.city_name(),
    "承办人": lambda: faker.name(),
    "可能性": lambda: random.choice(["高", "中", "低"]),
    "传真号码": lambda: faker.phone_number(),
    "被执行人": lambda: faker.name(),
    "号码": lambda: f"{random.randint(100000, 999999)}",
    "宗教信仰": lambda: random.choice(["佛教", "基督教", "伊斯兰教"]),
    "处": lambda: random.choice(["处室A", "处室B"]),
    "户籍": lambda: faker.address(),
    "驾车": lambda: random.choice(["合法驾车", "无证驾驶"]),
    "价值": lambda: f"{random.uniform(1000, 100000):.2f} 元",
    "中共党员": lambda: random.choice(["是", "否"]),
    "事项": lambda: faker.sentence(nb_words=10),
    "产品名称": lambda: random.choice(["手机", "笔记本", "电视"]),
    "附件": lambda: faker.file_name(extension="zip"),
    "定性": lambda: random.choice(["积极", "消极", "中立"]),
    "常用语": lambda: faker.sentence(nb_words=5),
    "牌照": lambda: faker.license_plate(),
    "法定代表": lambda: faker.name(),
    "涝点": lambda: f"涝点-{random.randint(1, 50)}",
    "填写内容": lambda: faker.sentence(nb_words=50),
    "网站": lambda: faker.url(),
    "评分": lambda: f"{random.uniform(1, 10):.1f}",
    "警力": lambda: random.randint(1, 100),
    "隐患": lambda: random.choice(["电线老化", "地基沉降"]),
    "权限": lambda: random.choice(["读", "写", "执行"]),
    "处理事件": lambda: faker.sentence(nb_words=10),
    "源": lambda: faker.word() + "源",
    "车牌号": lambda: faker.license_plate(),
    "个数": lambda: random.randint(1, 1000),
    "政治面貌": lambda: random.choice(["群众", "中共党员"]),
    "机构": lambda: faker.company(),
    "保管人": lambda: faker.name(),
    "毛色": lambda: random.choice(["棕色", "黑色", "白色"]),
    "车": lambda: random.choice(["轿车", "卡车", "摩托车"]),
    "证据": lambda: faker.sentence(nb_words=8),
    "政府": lambda: faker.city_name() + "政府",
    "颜色": lambda: random.choice(["红色", "蓝色", "绿色"]),
    "负荷": lambda: f"{random.uniform(1, 100):.2f} 吨",
    "理点": lambda: random.choice(["交货点", "分发点"]),
    "消息": lambda: faker.sentence(nb_words=6),
    "救济": lambda: f"{random.uniform(1000, 50000):.2f} 元",
    "仓库": lambda: faker.company() + "仓库",
    "目录": lambda: faker.word() + "目录",
    "信息": lambda: faker.sentence(nb_words=30),
    "案发": lambda: faker.city(),
    "厂商": lambda: faker.company(),
    "纵坐标": lambda: f"{random.uniform(-90, 90):.6f}",
    "乡镇": lambda: faker.city_name() + "镇",
    "涵义": lambda: faker.sentence(nb_words=8),
    "生产厂家": lambda: faker.company(),
    "备案": lambda: f"备案-{random.randint(10000, 99999)}",
    "主表": lambda: faker.word() + "主表",
    "序列": lambda: f"序列-{random.randint(1000, 9999)}",
    "分值": lambda: f"{random.uniform(1, 100):.1f}",
    "层级": lambda: random.choice(["一级", "二级", "三级"]),
    "高压": lambda: f"{random.uniform(1, 500):.2f} MPa",
    "水深": lambda: f"{random.uniform(0.1, 100):.2f} 米",
    "案值": lambda: f"{random.uniform(1000, 100000):.2f} 元",
    "签章": lambda: random.choice(["已签章", "未签章"]),
    "环节": lambda: faker.sentence(nb_words=6),
    "案别": lambda: random.choice(["刑事", "民事", "行政"]),
    "河流": lambda: random.choice(["长江", "黄河", "珠江"]),
    "案由": lambda: faker.sentence(nb_words=8),
    "实例": lambda: faker.sentence(nb_words=10),
    "开业": lambda: faker.date_this_century().strftime("%Y-%m-%d"),
    "证照": lambda: faker.word() + "证照",
    "收货人": lambda: faker.name(),
    "产业": lambda: random.choice(["农业", "工业", "服务业"]),
    "常压": lambda: f"{random.uniform(1, 100):.2f} MPa",
    "生产日期": lambda: faker.date_this_decade().strftime("%Y-%m-%d"),
    "计量单位": lambda: random.choice(["公斤", "米", "升"]),
    "父亲": lambda: faker.name_male(),
    "地点": lambda: faker.address(),
    "袁术": lambda: "袁术",
    "出租人": lambda: faker.name(),
    "规章": lambda: faker.sentence(nb_words=8),
    "戒毒": lambda: random.choice(["戒毒成功", "戒毒失败"]),
    "原": lambda: faker.word() + "原",
    "车身": lambda: f"{random.uniform(1, 100):.2f} 米",
    "目的地": lambda: faker.city(),
    "故障": lambda: faker.sentence(nb_words=6),
    "委托人": lambda: faker.name(),
    "降雨量": lambda: f"{random.uniform(0, 500):.2f} 毫米",
    "作案": lambda: random.choice(["偷盗", "诈骗", "破坏"]),
    "专业": lambda: faker.job(),
    "井口": lambda: f"井口-{random.randint(1, 50)}",
    "居民身份证": lambda: faker.ssn(),
    "权利": lambda: random.choice(["所有权", "使用权"]),
    "电子邮箱": lambda: faker.email(),
    "法律援助": lambda: random.choice(["已援助", "未援助"]),
    "部分": lambda: faker.sentence(nb_words=8),
    "警戒水位": lambda: f"{random.uniform(1, 10):.2f} 米",
    "随军": lambda: random.choice(["是", "否"]),
    "居留证": lambda: faker.ssn(),
    "货厢": lambda: f"{random.randint(1, 100)} m³",
    "危化": lambda: random.choice(["易燃品", "有毒气体"]),
    "牌号": lambda: faker.word() + "牌号",
    "单元": lambda: f"单元-{random.randint(1, 100)}",
    "管道": lambda: random.choice(["水管", "电缆"]),
    "业态": lambda: random.choice(["商业", "工业", "住宅"]),
    "工商": lambda: faker.company(),
    "品种": lambda: faker.word() + "品种",
    "所在地": lambda: faker.city(),
    "注册资金": lambda: f"{random.uniform(100000, 10000000):.2f} 元",
    "科所": lambda: faker.word() + "科所",
    "起点": lambda: faker.address(),
    "管理人员": lambda: faker.name(),
    "液化气": lambda: f"{random.uniform(1, 100):.2f} 吨",
    "强制措施": lambda: faker.sentence(nb_words=8),
    "具体地址": lambda: faker.address(),
    "实际": lambda: faker.sentence(nb_words=8),
    "序号": lambda: f"序号-{random.randint(1, 9999)}",
    "址": lambda: faker.address(),
    "外网": lambda: faker.url(),
    "实": lambda: faker.sentence(nb_words=6),
    "基准": lambda: random.choice(["基准值", "参考标准"]),
    "英文": lambda: faker.word(),
    "立案": lambda: random.choice(["已立案", "未立案"]),
    "批号": lambda: f"批号-{random.randint(1000, 9999)}",
    "高度": lambda: f"{random.uniform(1, 100):.2f} 米",
    "法规": lambda: faker.sentence(nb_words=8),
    "抵押权人": lambda: faker.name(),
    "社区": lambda: faker.city_name() + "社区",
    "账户": lambda: faker.random_number(digits=10),
    "部门": lambda: random.choice(["财务部", "人事部", "研发部"]),
    "小类": lambda: random.choice(["类别A", "类别B", "类别C"]),
    "原物": lambda: faker.word() + "原物",
    "模板": lambda: faker.word() + "模板",
    "物质": lambda: random.choice(["化学物质", "金属", "塑料"]),
    "身份证号": lambda: faker.ssn(),
    "特种行业": lambda: random.choice(["化工", "电力", "航天"]),
    "人口数量": lambda: random.randint(1000, 100000),
    "轮胎": lambda: random.choice(["轮胎A", "轮胎B"]),
    "疫苗": lambda: random.choice(["流感疫苗", "新冠疫苗"]),
    "分局": lambda: faker.city_name() + "分局",
    "人户": lambda: faker.name(),
    "外廓": lambda: f"{random.uniform(1, 100):.2f} cm",
    "纳税": lambda: f"{random.uniform(100, 10000):.2f} 元",
    "总经理": lambda: faker.name(),
    "条": lambda: random.choice(["条款A", "条款B"]),
    "图片": lambda: faker.image_url(),
    "长度": lambda: f"{random.uniform(1, 1000):.2f} cm",
    "权责": lambda: random.choice(["归个人", "归单位"]),
    "作业": lambda: faker.word() + "作业",
    "户址": lambda: faker.address(),
    "总数": lambda: random.randint(1, 10000),
    "主体资格": lambda: random.choice(["有资格", "无资格"]),
    "案卷": lambda: f"案卷-{random.randint(1000, 9999)}",
    "性质": lambda: random.choice(["民事", "刑事"]),
    "关联性": lambda: random.choice(["高", "中", "低"]),
    "证编号": lambda: f"证-{random.randint(1000, 9999)}",
    "接收者": lambda: faker.name(),
    "人民法院": lambda: faker.city_name() + "人民法院",
    "法院": lambda: faker.city_name() + "法院",
    "方": lambda: random.choice(["甲方", "乙方"]),
    "中心": lambda: faker.word() + "中心",
    "被告人": lambda: faker.name(),
    "结构": lambda: random.choice(["钢结构", "木结构"]),
    "公民": lambda: faker.name(),
    "康复训练": lambda: faker.word() + "训练",
    "路径": lambda: faker.file_path(),
    "利润总额": lambda: f"{random.uniform(1000, 100000):.2f} 元",
    "报告": lambda: faker.word() + "报告",
    "高校": lambda: faker.company() + "大学",
    "定义": lambda: faker.sentence(nb_words=6),
    "值": lambda: f"{random.uniform(1, 100):.2f}",
    "物证": lambda: faker.word() + "物证",
    "模式": lambda: random.choice(["自动模式", "手动模式"]),
    "工具": lambda: random.choice(["锤子", "螺丝刀"]),
    "地市": lambda: faker.city(),
    "凭证": lambda: faker.word() + "凭证",
    "入户": lambda: random.choice(["已入户", "未入户"]),
    "某年某月": lambda: faker.date_this_century().strftime("%Y年%m月"),
    "监督管理": lambda: faker.word() + "管理",
    "身份证": lambda: faker.ssn(),
    "过程": lambda: faker.sentence(nb_words=10),
    "效果": lambda: random.choice(["好", "一般", "差"]),
    "记录": lambda: faker.sentence(nb_words=50),
    "物品": lambda: random.choice(["箱子", "袋子", "盒子"]),
    "速度": lambda: f"{random.uniform(10, 200):.2f} km/h",
    "人事": lambda: faker.name(),
    "准考证": lambda: f"准考证-{random.randint(1000, 9999)}",
    "车辆": lambda: random.choice(["轿车", "货车", "摩托车"]),
    "指纹": lambda: f"{faker.md5()}",
    "指派": lambda: faker.name(),
    "性别": lambda: random.choice(["男", "女"]),
    "医疗器械": lambda: random.choice(["注射器", "呼吸机"]),
    "站码": lambda: f"站-{random.randint(1, 100)}",
    "雨水": lambda: f"{random.uniform(1, 500):.2f} 毫米",
    "印章": lambda: random.choice(["已盖章", "未盖章"]),
    "楼栋": lambda: f"楼栋-{random.randint(1, 100)}",
    "积水": lambda: f"{random.uniform(0.1, 1):.2f} 米",
    "平台": lambda: faker.company() + "平台",
    "车号": lambda: faker.license_plate(),
    "按钮": lambda: f"按钮-{random.randint(1, 10)}",
    "封箱": lambda: f"{random.randint(1, 50)} 个箱子",
    "机关": lambda: faker.word() + "机关",
    "记录员": lambda: faker.name(),
    "省局": lambda: faker.province() + "省局",
    "区划": lambda: faker.city_name() + "区划",
    "始发地": lambda: faker.city(),
    "水体": lambda: random.choice(["湖泊", "河流"]),
    "红色": lambda: "红色",
    "用户": lambda: faker.name(),
    "车主": lambda: faker.name(),
    "项目名称": lambda: faker.word() + "项目",
    "牌": lambda: faker.word() + "牌",
    "存放处": lambda: faker.address(),
    "地表": lambda: random.choice(["泥土", "水泥"]),
    "邮编": lambda: faker.postcode(),
    "学历": lambda: random.choice(["小学", "初中", "高中", "本科", "研究生"]),
    "销案": lambda: random.choice(["已销案", "未销案"]),
    "身份": lambda: random.choice(["学生", "教师", "工人"]),
    "场所": lambda: random.choice(["学校", "医院", "车站"]),
    "品名": lambda: random.choice(["电脑", "手机", "家具"]),
    "绰号": lambda: random.choice(["小红", "大壮", "老李"]),
    "程度": lambda: random.choice(["轻微", "中等", "严重"]),
    "阈值": lambda: f"{random.uniform(1, 100):.2f}",
    "状况": lambda: random.choice(["良好", "一般", "恶化"]),
    "尸体": lambda: random.choice(["完整", "部分"]),
    "排口": lambda: f"排口-{random.randint(1, 100)}",
    "瓶": lambda: f"{random.randint(1, 100)} 瓶",
    "人员伤亡": lambda: random.choice(["无伤亡", f"{random.randint(1, 10)} 人伤亡"]),
    "邮政编码": lambda: faker.postcode(),
    "张": lambda: f"{random.randint(1, 50)} 张",
    "后值": lambda: f"{random.uniform(1, 100):.2f}",
    "列席": lambda: random.choice(["是", "否"]),
    "方式": lambda: random.choice(["线上", "线下"]),
    "子": lambda: random.choice(["儿子", "女儿"]),
    "厂站": lambda: faker.company() + "厂站",
    "电话": lambda: faker.phone_number(),
    "数值": lambda: f"{random.uniform(1, 100):.2f}",
    "库房": lambda: faker.company() + "库房",
    "经济": lambda: random.choice(["增长", "下降"]),
    "残疾证": lambda: faker.random_number(digits=10),
    "合格": lambda: random.choice(["是", "否"]),
    "数额": lambda: f"{random.uniform(100, 10000):.2f} 元",
    "负责人": lambda: faker.name(),
    "工商户": lambda: faker.company(),
    "气源": lambda: random.choice(["天然气", "煤气"]),
    "项": lambda: faker.word() + "项目",
    "国别": lambda: random.choice(["中国", "美国", "英国"]),
    "泵站": lambda: faker.company() + "泵站",
    "航线": lambda: random.choice(["国内航线", "国际航线"]),
    "管区": lambda: faker.city() + "管区",
    "工单": lambda: f"工单-{random.randint(1000, 9999)}",
    "公安机关": lambda: faker.city() + "公安机关",
    "危害": lambda: faker.sentence(nb_words=6),
    "轴距": lambda: f"{random.uniform(1.0, 3.0):.2f} m",
    "污水处理": lambda: f"{random.uniform(1, 1000):.2f} m³",
    "村区": lambda: faker.city_name() + "村区",
    "嫌疑人": lambda: faker.name(),
    "天数": lambda: random.randint(1, 365),
    "健康状况": lambda: random.choice(["健康", "亚健康", "疾病"]),
    "载体": lambda: random.choice(["硬盘", "光盘", "U盘"]),
    "原因": lambda: faker.sentence(nb_words=8),
    "传人": lambda: faker.name(),
    "报警器": lambda: f"报警器-{random.randint(1, 50)}",
    "区县": lambda: faker.city_name() + "区",
    "建筑物": lambda: random.choice(["办公楼", "住宅楼"]),
    "居住地": lambda: faker.city(),
    "总额": lambda: f"{random.uniform(1000, 1000000):.2f} 元",
    "教练员": lambda: faker.name(),
    "董事长": lambda: faker.name(),
    "国产": lambda: random.choice(["是", "否"]),
    "降雨": lambda: f"{random.uniform(0, 500):.2f} 毫米",
    "分类": lambda: random.choice(["类别A", "类别B", "类别C"]),
    "燃气": lambda: random.choice(["天然气", "液化气"]),
    "现住地": lambda: faker.city_name(),
    "镇": lambda: faker.city_name() + "镇",
    "证": lambda: faker.word() + "证",
    "街路": lambda: faker.street_name(),
    "供气": lambda: f"{random.uniform(1, 1000):.2f} m³/h",
    "男性": lambda: random.choice(["是", "否"]),
    "月份": lambda: f"{random.randint(1, 12)} 月",
    "管理员": lambda: faker.name(),
    "字段名": lambda: faker.word(),
    "产品编号": lambda: f"产品-{random.randint(1000, 9999)}",
    "百分比": lambda: f"{random.uniform(0, 100):.2f}%",
    "法律": lambda: faker.sentence(nb_words=8),
    "血统": lambda: random.choice(["纯种", "混血"]),
    "相片": lambda: faker.image_url(),
    "汇报": lambda: faker.sentence(nb_words=12),
    "学业": lambda: random.choice(["优秀", "良好", "一般"]),
    "子女": lambda: f"{random.randint(1, 5)} 个",
    "原件": lambda: faker.word() + "原件",
    "劳动力": lambda: random.randint(10, 1000),
    "公证": lambda: faker.word() + "公证",
    "准迁证": lambda: faker.word() + "准迁证",
    "路线": lambda: faker.word() + "路线",
    "登记注册": lambda: random.choice(["已登记", "未登记"]),
    "水泵": lambda: f"{random.randint(1, 10)} 台",
    "区域": lambda: faker.city_name() + "区域",
    "气体": lambda: random.choice(["氧气", "氢气"]),
    "单": lambda: f"单-{random.randint(1000, 9999)}",
    "月度": lambda: random.choice(["一月", "二月"]),
    "结论": lambda: faker.sentence(nb_words=10),
    "办案": lambda: random.choice(["已办结", "未办结"]),
    "卡口": lambda: f"卡口-{random.randint(1, 20)}",
    "供水量": lambda: f"{random.uniform(1, 1000):.2f} m³/h",
    "液位计": lambda: f"{random.uniform(0.1, 10):.2f} m",
    "治安案件": lambda: random.choice(["打架", "盗窃"]),
    "数据表": lambda: faker.word() + "表",
    "摄氏度": lambda: f"{random.uniform(-30, 50):.2f} ℃",
    "出厂日期": lambda: faker.date_this_decade().strftime("%Y-%m-%d"),
    "时限": lambda: f"{random.randint(1, 365)} 天",
    "份数": lambda: f"{random.randint(1, 50)} 份",
    "市场主体": lambda: faker.company(),
    "源代码": lambda: faker.word() + "代码",
    "横坐标": lambda: f"{random.uniform(0, 100):.2f}",
    "意见": lambda: faker.sentence(nb_words=12),
    "停车场": lambda: faker.word() + "停车场",
    "数据源": lambda: faker.word() + "数据源",
    "楼层": lambda: f"{random.randint(1, 50)} 层",
    "独生子女": lambda: random.choice(["是", "否"]),
    "工程机械": lambda: random.choice(["挖掘机", "推土机", "吊车"]),
    "高程": lambda: f"{random.uniform(0, 5000):.2f} 米",
    "学校地址": lambda: faker.address(),
    "账号": lambda: faker.random_number(digits=10),
    "标识码": lambda: f"{random.randint(1000, 9999)}-{random.randint(1000, 9999)}",
    "书面": lambda: faker.sentence(nb_words=8),
    "投资性": lambda: random.choice(["高", "中", "低"]),
    "职业": lambda: faker.job(),
    "重病": lambda: random.choice(["癌症", "心脏病"]),
    "缺口": lambda: f"{random.randint(1, 100)}%",
    "设施": lambda: random.choice(["水利设施", "交通设施"]),
    "扫码": lambda: f"扫码-{random.randint(1, 999)}",
    "单位名称": lambda: faker.company(),
    "项目": lambda: faker.word() + "项目",
    "病种": lambda: random.choice(["感冒", "肺炎", "高血压"]),
    "磷": lambda: f"{random.uniform(0.1, 100):.2f} ppm",
    "公安": lambda: faker.city_name() + "公安局",
    "育龄妇女": lambda: random.randint(1, 1000),
    "资金": lambda: f"{random.uniform(10000, 1000000):.2f} 元",
    "流域": lambda: random.choice(["长江流域", "黄河流域"]),
    "气瓶": lambda: f"{random.randint(1, 100)} 个",
    "男": lambda: "男",
    "钢板": lambda: f"{random.uniform(1, 100):.2f} mm",
    "合格证": lambda: f"合格证-{random.randint(1000, 9999)}",
    "注册号": lambda: f"注册号-{random.randint(100000, 999999)}",
    "线索": lambda: faker.sentence(nb_words=8),
    "痕迹": lambda: random.choice(["指纹", "鞋印", "血迹"]),
    "检察院": lambda: faker.city_name() + "检察院",
    "合议": lambda: random.choice(["通过", "未通过"]),
    "交管局": lambda: faker.city_name() + "交管局",
    "科目": lambda: random.choice(["数学", "英语", "物理"]),
    "关环": lambda: random.choice(["通过", "未通过"]),
    "功率": lambda: f"{random.uniform(1, 1000):.2f} W",
    "质量": lambda: f"{random.uniform(1, 1000):.2f} kg",
    "方向": lambda: random.choice(["北", "南", "东", "西"]),
    "逗号": lambda: ",",
    "市区": lambda: faker.city(),
    "内容": lambda: faker.sentence(nb_words=50),
    "伤亡人数": lambda: f"{random.randint(1, 100)} 人",
    "时间段": lambda: f"{random.randint(0, 23)}:00-{random.randint(0, 23)}:59",
    "注册资本": lambda: f"{random.uniform(10000, 1000000):.2f} 元",
    "登记号": lambda: f"登记号-{random.randint(100000, 999999)}",
    "重点": lambda: faker.sentence(nb_words=8),
    "管网": lambda: random.choice(["供水管网", "供气管网"]),
    "用户数量": lambda: random.randint(1, 100000),
    "犬种": lambda: random.choice(["金毛", "哈士奇", "柴犬"]),
    "标的额": lambda: f"{random.uniform(1000, 1000000):.2f} 元",
    "气量": lambda: f"{random.uniform(1, 1000):.2f} m³",
    "社保卡": lambda: f"社保卡-{random.randint(100000, 999999)}",
    "文件": lambda: faker.file_name(),
    "标准": lambda: random.choice(["国标", "行业标准"]),
    "船名": lambda: random.choice(["长江号", "黄河号"]),
    "证件号码": lambda: faker.ssn(),
    "注册证": lambda: f"注册证-{random.randint(100000, 999999)}",
    "出生地": lambda: faker.city_name(),
    "计划数": lambda: random.randint(1, 1000),
    "数据库": lambda: faker.word() + "数据库",
    "延时": lambda: f"{random.uniform(0.1, 10):.2f} 秒",
    "文号": lambda: f"文号-{random.randint(1000, 9999)}",
    "途径": lambda: random.choice(["高速公路", "乡村道路"]),
    "河底": lambda: f"{random.uniform(1, 100):.2f} m",
    "分区": lambda: faker.city_name() + "分区",
    "党组织": lambda: faker.word() + "党组织",
    "门牌号码": lambda: f"{random.randint(1, 999)}号",
    "裁量": lambda: random.choice(["高裁量", "低裁量"]),
    "押运员": lambda: faker.name(),
    "证号": lambda: f"证号-{random.randint(1000, 9999)}",
    "小时": lambda: f"{random.randint(1, 24)} 小时",
    "过犬类": lambda: random.choice(["导盲犬", "警犬"]),
    "房主": lambda: faker.name(),
    "仪器": lambda: random.choice(["显微镜", "光谱仪"]),
    "沸点": lambda: f"{random.uniform(50, 300):.2f} ℃",
    "吴江": lambda: "吴江",
    "工": lambda: faker.word() + "工",
    "方案": lambda: faker.word() + "方案",
    "民警": lambda: faker.name(),
    "线路": lambda: random.choice(["1号线", "2号线"]),
    "巷": lambda: faker.street_name() + "巷",
    "经营场所": lambda: faker.address(),
    "纯种": lambda: random.choice(["是", "否"]),
    "科室": lambda: random.choice(["骨科", "心内科"]),
    "资料": lambda: faker.sentence(nb_words=50),
    "受害人": lambda: faker.name(),
    "积淹": lambda: f"{random.uniform(0.1, 2):.2f} 米",
    "委托": lambda: faker.name(),
    "管理者": lambda: faker.name(),
    "版本号": lambda: f"v{random.randint(1, 10)}.{random.randint(0, 9)}",
    "事故": lambda: random.choice(["交通事故", "工伤事故"]),
    "行政区": lambda: faker.city(),
    "室": lambda: f"{random.randint(1, 100)} 室",
    "采卡": lambda: faker.word() + "采卡",
    "看护人": lambda: faker.name(),
    "水位": lambda: f"{random.uniform(0.1, 10):.2f} m",
    "父": lambda: faker.name_male(),
    "公告": lambda: faker.sentence(nb_words=12),
    "氮": lambda: f"{random.uniform(0.1, 100):.2f} ppm",
    "国家": lambda: random.choice(["中国", "美国", "英国"]),
    "外商": lambda: faker.company(),
    "供应量": lambda: f"{random.uniform(1, 1000):.2f} 吨",
    "住所": lambda: faker.address(),
    "级别": lambda: random.choice(["初级", "中级", "高级"]),
    "人员": lambda: faker.name(),
    "装置": lambda: random.choice(["机械设备", "电子装置"]),
    "频率": lambda: f"{random.uniform(1, 100):.2f} Hz",
    "方法": lambda: faker.sentence(nb_words=8),
    "马力": lambda: f"{random.uniform(50, 500):.2f} hp",
    "室数": lambda: random.randint(1, 10),
    "陈述": lambda: faker.sentence(nb_words=12),
    "医疗": lambda: random.choice(["设备", "服务"]),
    "委会": lambda: faker.word() + "委员会",
    "费用": lambda: f"{random.uniform(100, 10000):.2f} 元",
    "警衔": lambda: random.choice(["警员", "警司", "警督"]),
    "声明": lambda: faker.sentence(nb_words=10),
    "字典": lambda: {faker.word(): faker.word() for _ in range(5)},
    "财物": lambda: random.choice(["现金", "贵重物品"]),
    "现状": lambda: random.choice(["良好", "一般", "恶化"]),
    "行业类别": lambda: random.choice(["IT", "制造业", "服务业"]),
    "省市": lambda: faker.province(),
    "开户银行": lambda: random.choice(["工商银行", "建设银行", "招商银行"]),
    "折款": lambda: f"{random.uniform(0.1, 10):.2f} 折",
    "条码": lambda: faker.ean(length=13),
    "黑名单": lambda: [faker.name() for _ in range(random.randint(1, 5))],
    "机": lambda: faker.word() + "机",
    "通讯联系": lambda: faker.phone_number(),
    "国籍": lambda: random.choice(["中国", "美国", "英国"]),
    "老年人": lambda: faker.name(),
    "氨氮": lambda: f"{random.uniform(0.1, 50):.2f} ppm",
    "案情": lambda: faker.sentence(nb_words=12),
    "营业执照": lambda: faker.random_number(digits=10),
    "特行": lambda: random.choice(["特种设备", "特殊行业"]),
    "标题": lambda: faker.sentence(nb_words=8),
    "公司": lambda: faker.company(),
    "国": lambda: random.choice(["中国", "美国"]),
    "芯片": lambda: random.choice(["国产芯片", "进口芯片"]),
    "分数": lambda: random.randint(0, 100),
    "图": lambda: faker.image_url(),
    "保护区": lambda: random.choice(["生态保护区", "湿地保护区"]),
    "后果": lambda: faker.sentence(nb_words=10),
    "测站": lambda: faker.word() + "测站",
    "职工": lambda: faker.name(),
    "住处": lambda: faker.address(),
    "客户端": lambda: faker.word() + "客户端",
    "创建人": lambda: faker.name(),
    "系统": lambda: faker.word() + "系统",
    "事实": lambda: faker.sentence(nb_words=10),
    "负债": lambda: f"{random.uniform(1000, 100000):.2f} 元",
    "总长": lambda: f"{random.uniform(1, 1000):.2f} m",
    "标高": lambda: f"{random.uniform(0, 5000):.2f} 米",
    "有效期限": lambda: f"{random.randint(1, 365)} 天",
    "体重": lambda: f"{random.uniform(40, 100):.2f} kg",
    "要素": lambda: faker.word(),
    "用户名": lambda: faker.user_name(),
    "出质": lambda: random.choice(["资产", "股份"]),
    "电话号码": lambda: faker.phone_number(),
    "行政区域": lambda: faker.city_name(),
    "通行证": lambda: f"通行证-{random.randint(1000, 9999)}",
    "工程": lambda: faker.word() + "工程",
    "肇事": lambda: random.choice(["交通肇事", "工地事故"]),
    "常口": lambda: faker.city_name(),
    "所在单位": lambda: faker.company(),
    "水": lambda: f"{random.uniform(1, 1000):.2f} m³",
    "电讯": lambda: faker.word() + "电讯",
    "保险": lambda: random.choice(["医疗保险", "意外保险"]),
    "人口总数": lambda: random.randint(1000, 1000000),
    "耗电量": lambda: f"{random.uniform(1, 10000):.2f} kWh",
    "危险性": lambda: random.choice(["低", "中", "高"]),
    "机读": lambda: faker.word() + "机读",
    "植入": lambda: faker.word() + "植入",
    "数": lambda: random.randint(1, 1000),
    "水源": lambda: faker.word() + "水源",
    "业务范围": lambda: random.choice(["IT服务", "建筑工程"]),
    "兵役": lambda: random.choice(["已服役", "未服役"]),
    "坐标系": lambda: random.choice(["WGS84", "GCJ02"]),
    "条件": lambda: faker.sentence(nb_words=8),
    "疾病": lambda: random.choice(["感冒", "高血压"]),
    "起止日期": lambda: faker.date_this_decade().strftime("%Y-%m-%d"),
    "理论": lambda: faker.word() + "理论",
    "程序": lambda: faker.word() + "程序",
    "业务": lambda: faker.word() + "业务",
    "关系": lambda: random.choice(["关联", "非关联"]),
    "流速": lambda: f"{random.uniform(1, 100):.2f} m/s",
    "证书": lambda: f"证书-{random.randint(1000, 9999)}",
    "体型": lambda: random.choice(["大", "中", "小"]),
    "证人": lambda: faker.name(),
    "烟花爆竹": lambda: random.choice(["合格", "不合格"]),
    "人数": lambda: random.randint(1, 100),
    "驾驶员": lambda: faker.name(),
    "单位": lambda: faker.company(),
    "监护人": lambda: faker.name(),
    "有效期": lambda: f"{random.randint(1, 365)} 天",
    "经度": lambda: f"{random.uniform(-180, 180):.6f}",
    "事件": lambda: faker.sentence(nb_words=10),
    "营业": lambda: random.choice(["营业中", "已关闭"]),
    "条款": lambda: faker.sentence(nb_words=6),
    "内": lambda: random.choice(["室内", "室外"]),
    "通缉令": lambda: f"通缉令-{random.randint(1000, 9999)}",
    "证件": lambda: faker.ssn(),
    "年限": lambda: f"{random.randint(1, 50)} 年",
    "层数": lambda: random.randint(1, 100),
    "公章": lambda: random.choice(["已盖章", "未盖章"]),
    "储量": lambda: f"{random.uniform(1, 1000):.2f} 吨",
    "楼": lambda: f"楼-{random.randint(1, 100)}",
    "作案工具": lambda: random.choice(["铁锤", "匕首"]),
    "机动": lambda: random.choice(["是", "否"]),
    "建议": lambda: faker.sentence(nb_words=8),
    "机构名称": lambda: faker.company(),
    "产品类别": lambda: random.choice(["电子", "家电"]),
    "代理人": lambda: faker.name(),
    "入库": lambda: f"{random.randint(1, 100)} 件",
    "生命线": lambda: random.choice(["重要", "一般"]),
    "问题": lambda: faker.sentence(nb_words=10),
    "液体": lambda: f"{random.uniform(1, 1000):.2f} L",
    "图象": lambda: faker.image_url(),
    "吨位": lambda: f"{random.uniform(1, 1000):.2f} 吨",
    "交易": lambda: random.choice(["已完成", "未完成"]),
    "储气": lambda: f"{random.uniform(1, 1000):.2f} m³",
    "样品": lambda: faker.word() + "样品",
    "储槽": lambda: f"{random.randint(1, 50)} 个",
    "时机": lambda: faker.sentence(nb_words=8),
    "电机": lambda: f"{random.uniform(50, 500):.2f} kW",
    "车牌": lambda: faker.license_plate(),
    "门牌": lambda: f"门牌-{random.randint(1, 100)}",
    "主营业务": lambda: random.choice(["销售", "服务"]),
    "家庭成员": lambda: [faker.name() for _ in range(random.randint(1, 6))],
    "车型": lambda: random.choice(["SUV", "轿车", "卡车"]),
    "处理结果": lambda: random.choice(["已处理", "未处理"]),
    "养老": lambda: random.choice(["养老保险", "退休金"]),
    "驾驶室": lambda: random.choice(["单排", "双排"]),
    "股东": lambda: faker.name(),
    "女性": lambda: "女",
    "人民政府": lambda: faker.city_name() + "人民政府",
    "值域": lambda: f"{random.uniform(1, 100):.2f}",
    "年龄段": lambda: random.choice(["0-18", "18-35", "35-60", "60以上"]),
    "处理工艺": lambda: faker.word() + "工艺",
    "发动机": lambda: random.choice(["汽油发动机", "柴油发动机"]),
    "维度": lambda: f"{random.uniform(1, 100):.2f} m",
    "文件名称": lambda: faker.file_name(),
    "资格": lambda: random.choice(["合格", "不合格"]),
    "住宅": lambda: faker.address(),
    "持续时间": lambda: f"{random.randint(1, 100)} 小时",
    "政策": lambda: faker.sentence(nb_words=8),
    "领证": lambda: faker.date_this_decade().strftime("%Y-%m-%d"),
    "流程": lambda: faker.sentence(nb_words=6),
    "经营者": lambda: faker.name(),
    "城乡": lambda: random.choice(["城市", "乡村"]),
    "河段": lambda: random.choice(["上游", "中游", "下游"]),
    "终值": lambda: f"{random.uniform(1, 100):.2f}",
    "年份": lambda: random.randint(2000, 2024),
    "商标": lambda: faker.word() + "商标",
    "考核内容": lambda: faker.sentence(nb_words=8),
    "信用": lambda: random.choice(["良好", "一般", "较差"]),
    "残疾": lambda: random.choice(["视力残疾", "肢体残疾"])
}



# 判断文本是否包含敏感词
def contains_sensitive_words(text):
    for word in SENSITIVE_WORDS:
        if word in text:
            return True
    return False

# 生成测试数据并只保留名词，剔除敏感词
def filter_nouns_and_sensitive_words(text):
    words = pseg.lcut(text)  # 使用 jieba 进行分词和词性标注
    # 筛选名词并剔除敏感词
    filtered_words = [word for word, flag in words if flag.startswith("n") and word not in SENSITIVE_WORDS]
    result = "".join(filtered_words)
    
    # 如果没有合适的词，或者包含敏感词，返回替代文本
    if not result or contains_sensitive_words(result):
        return "默认数据"
    return result


# 通用数据生成函数
def generate_data(column_comment, data_type):
    """
    根据字段注释和数据类型生成测试数据。

    :param column_comment: 字段的注释信息
    :param data_type: 字段的数据类型
    :return: 生成的测试数据
    """
    # 遍历映射表，根据字段注释中的关键字匹配规则
    for keyword, generator in RULE_MAPPING.items():
        if keyword in column_comment:
            return generator()
    
    # 默认处理
    if data_type in ["varchar", "text"]:
        return faker.sentence(nb_words=5)
    else:
        return faker.word()

# 主函数：生成一张表的测试数据
def create_test_data_for_table(host, user, password, database, table):
    connection = pymysql.connect(
        host=host, user=user, password=password, database=database
    )
    cursor = connection.cursor(pymysql.cursors.DictCursor)
    
    # 获取表的字段信息
    query = f"""
    SELECT COLUMN_NAME, COLUMN_COMMENT, DATA_TYPE
    FROM INFORMATION_SCHEMA.COLUMNS
    WHERE TABLE_SCHEMA = '{database}' AND TABLE_NAME = '{table}';
    """
    cursor.execute(query)
    schema = cursor.fetchall()
    connection.close()
    
    # 根据字段信息生成测试数据
    test_data = {}
    for column in schema:
        column_name = column["COLUMN_NAME"]
        column_comment = column["COLUMN_COMMENT"]
        data_type = column["DATA_TYPE"]
        test_data[column_name] = generate_data(column_comment, data_type)
    
    return test_data



def get_column_comments_and_segment(host, user, password, database):
    """
    获取所有表的列注释并进行分词
    """
    connection = pymysql.connect(
        host=host, user=user, password=password, database=database
    )
    cursor = connection.cursor(pymysql.cursors.DictCursor)

    # 查询所有表的列注释
    query = f"""
    SELECT TABLE_NAME, COLUMN_NAME, COLUMN_COMMENT
    FROM INFORMATION_SCHEMA.COLUMNS
    WHERE TABLE_SCHEMA = '{database}';
    """
    cursor.execute(query)
    columns = cursor.fetchall()
    connection.close()

    # 分词并组织结果
    segmented_comments = []
    for column in columns:
        table_name = column["TABLE_NAME"]
        column_name = column["COLUMN_NAME"]
        column_comment = column["COLUMN_COMMENT"]
        
        if column_comment:  # 如果有注释，进行分词
            segments = jieba.lcut(column_comment)
            segmented_comments.append({
                "table": table_name,
                "column": column_name,
                "comment": column_comment,
                "segments": segments
            })

    return segmented_comments

# 示例调用
if __name__ == "__main__":
    host = "2.37.106.180"
    user = "dsjzx"
    password = "wjdsjzx01"
    database = "wjq_send_db"
    table = "wjqgajjdcjylcsj20241227145859"
    test_data = create_test_data_for_table(host, user, password, database, table)
    # test_data = get_column_comments_and_segment(host, user, password, database)
    print(test_data)